---
import { type Language, T } from "@libs/language";
import { getEntry, render } from "astro:content";
import SectionNoCover from "@layouts/SectionNoCover.astro";
import DegreesProgramsListing from "@components/section/DegreesProgramsListing";
import { getDegreesPrograms } from "@libs/degrees_programs";
import { type DegreesProgramsMetadata } from "@libs/types";

export function getStaticPaths() {
  return ["zh"].map((language) => ({
    params: {
      language,
    },
  }));
}

function getCategories(data: DegreesProgramsMetadata[]) {
  const categoriesWithDups = data.map((value) => value.category);
  return categoriesWithDups.filter(
    (value, index) => categoriesWithDups.indexOf(value) == index,
  );
}

const language = Astro.params.language as Language;
const slug = `${language}/academic/degrees-programs`;
const page = await getEntry("pages", slug);
if (!page) return;
const Content = (await render(page)).Content;

const data = await getDegreesPrograms(language);
const categories = [
  {
    label: T("degree_type", language),
    value: "all",
  },
  ...getCategories(data).map((category) => ({
    label: T(category, language),
    value: category,
  })),
];
const messages = {
  credits: T("credits", language),
};
---

<SectionNoCover language={language} title={page.data.title} slug={slug}>
  <div class="prose my-4">
    <Content />
    <DegreesProgramsListing
      data={data}
      categories={categories}
      messages={messages}
      client:load
    />
  </div>
</SectionNoCover>
