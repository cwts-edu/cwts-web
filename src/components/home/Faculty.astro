---
import "@libs/faculty";
import { type FacultyMetadata, getFacultyMetadata } from "@libs/faculty";
import { Language, T } from "@libs/language";
import FacultyRow from "./FacultyRow";
import Widget from "./Widget.astro";
import type { Messages } from "./FacultyRow";

export interface Props {
  language: Language;
}

const { language } = Astro.props;

const facultyFieldsToKeep: (keyof FacultyMetadata)[] = [
  "url", "name", "photo", "positions", "courses"];

// Keep useful fields in FacultyMetadata because the data will be embedded in the html
function filterFields<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {
  return keys.reduce((acc, key) => {
    acc[key] = obj[key];
    return acc;
  }, {} as Pick<T, K>);
}

const faculty = getFacultyMetadata(language, ["faculty"]).map(
  f => filterFields(f, facultyFieldsToKeep)
);
const messages: Messages = {
  course_prefix: T("course_prefix", language),
  course_separator: T("course_separator", language),
  position_prefix: T("position_prefix", language),
  position_separator: T("position_separator", language),
};
---

<Widget
  title={T("faculty_members", language)}
  classNames={["bg-[#291F1F] text-white"]}
  moreLink={`/${language}/academic/faculty`}
  moreText={T("more", language)}
>
  <div class="mb-5 mt-2 text-xl">
    <span class="py-1 border-white border-b">
      {T("faculty", language)}
    </span>
  </div>
  <FacultyRow faculty={faculty} messages={messages} client:idle />
</Widget>
